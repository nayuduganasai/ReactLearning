{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganas\\\\OneDrive\\\\Documents\\\\ReactLearning\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  //name realatd state values\n  const [entreredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameIsValid = entreredName.trim() !== '';\n  const nameInputIsInvalid = !nameIsValid && enteredNameTouched;\n\n  // e-mail related state values\n  const [entreredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const emailIsValid = entreredEmail.includes('@');\n  const emailInputIsInvalid = !emailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!nameIsValid || !emailIsValid) {\n      return;\n    }\n    console.log(entreredName);\n    console.log(entreredEmail);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClass = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInpuRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: entreredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name field should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInpuRef,\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: entreredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Eamil field should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"AM+lo+Y/qlLUSb96NBUEM/X9Jcw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","entreredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","nameIsValid","trim","nameInputIsInvalid","entreredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","emailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputHandler","event","target","value","nameInputBlurHandler","emailInputHandler","emailInputBlurHandler","formSubmitHandler","preventDefault","console","log","nameInputClass","emailInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","nameInpuRef","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ganas/OneDrive/Documents/ReactLearning/Forms/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from 'react';\n\nconst SimpleInput = (props) => {\n\n//name realatd state values\n  const [entreredName, setEnteredName] = useState('');\n  const [enteredNameTouched,setEnteredNameTouched] = useState(false);\n  const nameIsValid = entreredName.trim() !== '';\n  const nameInputIsInvalid = !nameIsValid && enteredNameTouched;\n\n  // e-mail related state values\n   const [entreredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched,setEnteredEmailTouched] = useState(false);\n  const emailIsValid = entreredEmail.includes('@');\n  const emailInputIsInvalid = !emailIsValid && enteredEmailTouched;\n\n\n  let formIsValid = false;\n\n  if(nameIsValid && emailIsValid){\n    formIsValid = true;\n  }\n\n  const nameInputHandler = event=>{\n      setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event=>{\n     setEnteredNameTouched(true);\n  }\n\n   const emailInputHandler = event=>{\n      setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event=>{\n     setEnteredEmailTouched(true);\n  }\n\n\n\n  const formSubmitHandler = event =>{\n\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if(!nameIsValid || !emailIsValid){\n        return;\n    }\n    console.log(entreredName);\n    console.log(entreredEmail)\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  }\n  const nameInputClass = nameInputIsInvalid? 'form-control invalid':'form-control';\n\n   const emailInputClass = emailInputIsInvalid? 'form-control invalid':'form-control';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInpuRef}\n               type='text' \n              id='name' \n              onChange={nameInputHandler}\n              onBlur={nameInputBlurHandler}\n              value={entreredName}/>\n             {nameInputIsInvalid && \n             <p className='error-text'>Name field should not be empty</p>\n             } \n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor='name'>Your E-mail</label>\n        <input ref={nameInpuRef}\n               type='email' \n              id='email' \n              onChange={emailInputHandler}\n              onBlur={emailInputBlurHandler}\n              value={entreredEmail}/>\n             {emailInputIsInvalid && \n             <p className='error-text'>Eamil field should not be empty</p>\n             } \n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
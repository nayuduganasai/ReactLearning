{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganas\\\\OneDrive\\\\Documents\\\\ReactLearning\\\\Food-Ordering-App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\";\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport Mealitem from './MealItem/MealItem';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\nconst AvailableMeals = () => {\n  // const [meals, setMeals] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState();\n\n  // useEffect(()=>{\n  //     const fetchmeals = async()=>{\n  //       const response = await fetch(\"http://localhost:8080/movie/allmovies\"\n  //       );\n  //        console.log(response);\n  //       if(!response.ok){\n  //         throw new Error('Somthing Went Wrong !');\n  //       }\n\n  //       const responseData = await response.json();\n\n  //       const loadedMeals = [];\n\n  //       for(const key in responseData){\n  //         loadedMeals.push({\n  //           id:key,\n  //           name:responseData[key].name,\n  //           description: responseData[key].description,\n  //           price: responseData[key].price\n\n  //         });\n  //       }\n  //       setMeals(loadedMeals);\n  //       setIsLoading(false);\n  //     };\n\n  //     fetchmeals().catch((error)=>{\n  //       setIsLoading(false);\n  //       setHttpError(error.message);\n  //     });\n  // },[]);\n\n  // if(isLoading){\n  //   return(\n  //     <section className={classes.MealsLoading}>\n  //       <p>Loading...</p>\n  //     </section>\n  //   )\n  // }\n\n  //  if (httpError) {\n  //   return (\n  //     <section className={classes.MealsError}>\n  //       <p>{httpError}</p>\n  //     </section>\n  //   );\n  // }\n\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(Mealitem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","Mealitem","React","useState","useEffect","jsxDEV","_jsxDEV","DUMMY_MEALS","id","name","description","price","AvailableMeals","mealsList","map","meal","fileName","_jsxFileName","lineNumber","columnNumber","className","meals","children","_c","$RefreshReg$"],"sources":["C:/Users/ganas/OneDrive/Documents/ReactLearning/Food-Ordering-App/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport Mealitem from './MealItem/MealItem';\r\nimport React,{useState, useEffect } from 'react';\r\n\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Sushi',\r\n    description: 'Finest fish and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'Schnitzel',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Green Bowl',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = () =>{\r\n\r\n  // const [meals, setMeals] = useState([]);\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  // const [httpError, setHttpError] = useState();\r\n\r\n  // useEffect(()=>{\r\n  //     const fetchmeals = async()=>{\r\n  //       const response = await fetch(\"http://localhost:8080/movie/allmovies\"\r\n  //       );\r\n  //        console.log(response);\r\n  //       if(!response.ok){\r\n  //         throw new Error('Somthing Went Wrong !');\r\n  //       }\r\n\r\n  //       const responseData = await response.json();\r\n       \r\n  //       const loadedMeals = [];\r\n\r\n  //       for(const key in responseData){\r\n  //         loadedMeals.push({\r\n  //           id:key,\r\n  //           name:responseData[key].name,\r\n  //           description: responseData[key].description,\r\n  //           price: responseData[key].price\r\n\r\n  //         });\r\n  //       }\r\n  //       setMeals(loadedMeals);\r\n  //       setIsLoading(false);\r\n  //     };\r\n\r\n  //     fetchmeals().catch((error)=>{\r\n  //       setIsLoading(false);\r\n  //       setHttpError(error.message);\r\n  //     });\r\n  // },[]);\r\n\r\n  // if(isLoading){\r\n  //   return(\r\n  //     <section className={classes.MealsLoading}>\r\n  //       <p>Loading...</p>\r\n  //     </section>\r\n  //   )\r\n  // }\r\n\r\n  //  if (httpError) {\r\n  //   return (\r\n  //     <section className={classes.MealsError}>\r\n  //       <p>{httpError}</p>\r\n  //     </section>\r\n  //   );\r\n  // }\r\n\r\n\r\n    const mealsList  = DUMMY_MEALS.map(meal => \r\n    <Mealitem key ={meal.id}\r\n              id={meal.id}\r\n              name = {meal.name}\r\n              description ={meal.description}\r\n              price = {meal.price}/>);\r\n    return(\r\n    <section className = {classes.meals} >\r\n        <Card>\r\n             <ul>\r\n            {mealsList}\r\n        </ul>\r\n        </Card>\r\n       \r\n    </section>\r\n    );\r\n}\r\nexport default AvailableMeals;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,qBAAqB;EAClCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,sBAAsB;EACnCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE,wBAAwB;EACrCC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAE1B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE,MAAMC,SAAS,GAAIN,WAAW,CAACO,GAAG,CAACC,IAAI,iBACvCT,OAAA,CAACL,QAAQ;IACCO,EAAE,EAAEO,IAAI,CAACP,EAAG;IACZC,IAAI,EAAIM,IAAI,CAACN,IAAK;IAClBC,WAAW,EAAGK,IAAI,CAACL,WAAY;IAC/BC,KAAK,EAAII,IAAI,CAACJ;EAAM,GAJdI,IAAI,CAACP,EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIQ,CAAC,CAAC;EACjC,oBACAb,OAAA;IAASc,SAAS,EAAIrB,OAAO,CAACsB,KAAM;IAAAC,QAAA,eAChChB,OAAA,CAACN,IAAI;MAAAsB,QAAA,eACAhB,OAAA;QAAAgB,QAAA,EACAT;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEd,CAAC;AAAAI,EAAA,GAvEKX,cAAc;AAwEpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
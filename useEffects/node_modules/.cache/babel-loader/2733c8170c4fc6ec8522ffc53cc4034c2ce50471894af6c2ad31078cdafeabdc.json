{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganas\\\\OneDrive\\\\Documents\\\\ReactLearning\\\\useEffects\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n//The Following code from line 6 to 98 is implementation of the use state and useEffect Hooks and \n//This Can also Achive by using \"useReducer\" Hook That i wrote After the line 98.\n// const Login = (props) => {\n//   const [enteredEmail, setEnteredEmail] = useState('');\n//   const [emailIsValid, setEmailIsValid] = useState();\n//   const [enteredPassword, setEnteredPassword] = useState('');\n//   const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n// useEffect(()=>{\n//   const identifier = setTimeout(() => {\n//     console.log(\"checking form validity\")\n//     setFormIsValid(\n//       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//     );\n\n//   }, 500); \n\n//   //cleanup function\n//   return ()=>{\n//     console.log(\"cleanup\")\n//     clearTimeout(identifier);\n//   };\n// },[enteredEmail,enteredPassword]);\n\n//   const emailChangeHandler = (event) => {\n//     setEnteredEmail(event.target.value);\n//      // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     setEnteredPassword(event.target.value);\n\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//   };\n\n//   const validatePasswordHandler = () => {\n//     setPasswordIsValid(enteredPassword.trim().length > 6);\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(enteredEmail, enteredPassword);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={enteredPassword}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n//This is a login page using the usereducer hook and use effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  console.log(action.val);\n  if (action.type === 'userEntering') {\n    return {\n      val: action.value,\n      isValid: action.value.includes(\"@\")\n    };\n  }\n  if (action.type === 'userEntryFinish') {\n    return {\n      val: state.val,\n      isValid: state.val.includes(\"@\")\n    };\n  }\n  return {\n    val: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  // console.log(\"password hitting\")\n  if (action.type === 'userEntering') {\n    return {\n      val: action.VALUE,\n      isValid: action.VALUE.trim().length > 6\n    };\n  }\n  if (action.type === 'userEntryFinish') {\n    return {\n      val: state.val,\n      isValid: state.val.trim().length > 6\n    };\n  }\n  return {\n    val: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  //We can combinly Implement the two states with the useReducer Hook let's write here\n  const [enteredEmail, dispatchEnteredEmail] = useReducer(emailReducer, {\n    val: '',\n    isValid: null\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [enteredPassword, dispatchEnteredPassword] = useReducer(passwordReducer, {\n    val: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = enteredEmail;\n  console.log(emailIsValid);\n  const {\n    isValid: passwordIsValid\n  } = enteredPassword;\n  console.log(passwordIsValid);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking form validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    //cleanup function\n    return () => {\n      console.log(\"cleanup\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEnteredEmail({\n      type: 'UserEntering',\n      value: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    console.log(\"hitting\");\n    dispatchEnteredPassword({\n      type: 'userEntering',\n      VALUE: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    dispatchEnteredEmail({\n      type: 'UserEntryFinish'\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchEnteredEmail({\n      type: 'UserEntryFinish'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail.val, enteredPassword.val);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${enteredEmail.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${enteredPassword.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword.val,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"XCcSPx1gOi1HgEoETugxqCPr0Rs=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","console","log","val","type","value","isValid","includes","passwordReducer","VALUE","trim","length","Login","props","_s","enteredEmail","dispatchEnteredEmail","formIsValid","setFormIsValid","enteredPassword","dispatchEnteredPassword","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ganas/OneDrive/Documents/ReactLearning/useEffects/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n//The Following code from line 6 to 98 is implementation of the use state and useEffect Hooks and \n//This Can also Achive by using \"useReducer\" Hook That i wrote After the line 98.\n// const Login = (props) => {\n//   const [enteredEmail, setEnteredEmail] = useState('');\n//   const [emailIsValid, setEmailIsValid] = useState();\n//   const [enteredPassword, setEnteredPassword] = useState('');\n//   const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n// useEffect(()=>{\n//   const identifier = setTimeout(() => {\n//     console.log(\"checking form validity\")\n//     setFormIsValid(\n//       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//     );\n    \n//   }, 500); \n\n//   //cleanup function\n//   return ()=>{\n//     console.log(\"cleanup\")\n//     clearTimeout(identifier);\n//   };\n// },[enteredEmail,enteredPassword]);\n\n\n//   const emailChangeHandler = (event) => {\n//     setEnteredEmail(event.target.value);\n//      // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     setEnteredPassword(event.target.value);\n\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//   };\n\n//   const validatePasswordHandler = () => {\n//     setPasswordIsValid(enteredPassword.trim().length > 6);\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(enteredEmail, enteredPassword);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={enteredPassword}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n\n//This is a login page using the usereducer hook and use effect\n\nconst emailReducer = (state,action)=>{\n  console.log(action.val);\n  if(action.type === 'userEntering'){\n    \n    return { val :action.value, isValid: action.value.includes(\"@\")};\n  }\n   if(action.type === 'userEntryFinish'){\n    return { val :state.val, isValid: state.val.includes(\"@\")};\n  }\n  return{val:'',isValid : false};\n\n}\n\nconst passwordReducer = (state,action)=>{\n  // console.log(\"password hitting\")\n  if(action.type === 'userEntering'){\n    return { val :action.VALUE, isValid: action.VALUE.trim().length >6};\n  }\n   if(action.type === 'userEntryFinish'){\n    return { val :state.val, isValid: state.val.trim().length >6};\n  }\n  return{val:'',isValid : false};\n\n}\nconst Login = (props) => {\n \n  //We can combinly Implement the two states with the useReducer Hook let's write here\n  const[enteredEmail,dispatchEnteredEmail] = useReducer(emailReducer,{val:'',isValid:null})\n  const [formIsValid, setFormIsValid] = useState(false);\n  const[enteredPassword,dispatchEnteredPassword] = useReducer(passwordReducer,{ val:'', isValid:null })\n\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n\n  const { isValid: emailIsValid } = enteredEmail;\n  console.log(emailIsValid)\n  const { isValid: passwordIsValid } = enteredPassword;\n  console.log(passwordIsValid)\nuseEffect(()=>{\n  const identifier = setTimeout(() => {\n    console.log(\"checking form validity\")\n    setFormIsValid(emailIsValid && passwordIsValid);\n    \n  }, 500); \n\n  //cleanup function\n  return ()=>{\n    console.log(\"cleanup\")\n    clearTimeout(identifier);\n  };\n},[emailIsValid,passwordIsValid]);\n\n\n  const emailChangeHandler = (event) => {\n    \n    dispatchEnteredEmail({type:'UserEntering', value : event.target.value})\n  };\n\n  const passwordChangeHandler = (event) => {\n    console.log(\"hitting\")\n    dispatchEnteredPassword({type:'userEntering', VALUE :event.target.value })\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEnteredEmail({type:'UserEntryFinish'})\n  };\n\n  const validatePasswordHandler = () => {\n     dispatchEnteredEmail({type:'UserEntryFinish'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail.val, enteredPassword.val);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            enteredEmail.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            enteredPassword.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword.val}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
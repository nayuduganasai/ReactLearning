{"ast":null,"code":"// import {createStore} from 'redux';\n\n// const initialState = {counter:0,showCounter:true};\n// const counterReducder = (state =initialState, action) =>{\n\n//     if(action.type === 'increment'){\n//         return{\n//             counter:state.counter +1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//      if(action.type === 'decrement'){\n//         return{\n//             counter:state.counter -1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if(action.type === 'increase'){\n//         return{\n//             counter:state.counter +action.value,\n//             showCounter:state.showCounter\n//         }\n//     }\n\n//       if(action.type === 'toggle'){\n//         return{\n//             showCounter:!state.showCounter,\n//             counter:state.counter\n//         };\n//     }\n\n//     return state;\n// }\n\n// const store = createStore(counterReducder);\n\n// export default store;\n\n//................................................This is the same  code writing using the redux toolkit...........................\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter = state.counter + 1;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/ganas/OneDrive/Documents/ReactLearning/ReduxPractice/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux';\r\n\r\n// const initialState = {counter:0,showCounter:true};\r\n// const counterReducder = (state =initialState, action) =>{\r\n\r\n//     if(action.type === 'increment'){\r\n//         return{\r\n//             counter:state.counter +1,\r\n//             showCounter:state.showCounter\r\n//         }\r\n//     }\r\n//      if(action.type === 'decrement'){\r\n//         return{\r\n//             counter:state.counter -1,\r\n//             showCounter:state.showCounter\r\n//         }\r\n//     }\r\n//     if(action.type === 'increase'){\r\n//         return{\r\n//             counter:state.counter +action.value,\r\n//             showCounter:state.showCounter\r\n//         }\r\n//     }\r\n\r\n//       if(action.type === 'toggle'){\r\n//         return{\r\n//             showCounter:!state.showCounter,\r\n//             counter:state.counter\r\n//         };\r\n//     }\r\n\r\n\r\n//     return state;\r\n// }\r\n\r\n// const store = createStore(counterReducder);\r\n\r\n// export default store;\r\n\r\n//................................................This is the same  code writing using the redux toolkit...........................\r\nimport {createSlice,configureStore} from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter:0, showCounter:true };\r\n\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter= state.counter+1;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter = state.counter+action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            \r\n            state.showCounter = !state.showCounter;\r\n        }\r\n\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAQA,WAAW,EAACC,cAAc,QAAO,kBAAkB;AAE3D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAK,CAAC;AAEpD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,GAAEM,KAAK,CAACN,OAAO,GAAC,CAAC;IAClC,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAEhBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EAEJ;AACJ,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,cAAc,CAAC;EACzBe,OAAO,EAAEX,YAAY,CAACW;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}